{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa9a23e49ba4cfd040307708b3975a43420ad3f1c0c94f84a4587e3d6593c794c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "915317",
    "logsBloom": "0x
    "blockHash": "0xe8fdfa1fb1e431e96f6ba41d718de5fed302981699dfd5ec7373d66722f6f3d2",
    "transactionHash": "0xa9a23e49ba4cfd040307708b3975a43420ad3f1c0c94f84a4587e3d6593c794c",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "915317",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "806f2a9a4e744cffe23d11505feb5783",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n  event Funded(address indexed from, uint256 amount);\\n\\n  mapping(address => uint256) public addressToAmountFunded;\\n  address[] public funders;\\n  // Could we make this constant?  /* hint: no! We should make it immutable! */\\n  address public owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n  AggregatorV3Interface public priceFeed;\\n\\n  constructor(address priceFeedAddress) {\\n    owner = msg.sender;\\n    priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n      \\\"You need to spend more ETH!\\\"\\n    );\\n    // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n    addressToAmountFunded[msg.sender] += msg.value;\\n    funders.push(msg.sender);\\n    emit Funded(msg.sender, msg.value);\\n  }\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == owner);\\n    if (msg.sender != owner) revert NotOwner();\\n    _;\\n  }\\n\\n  function withdraw() public payable onlyOwner {\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      addressToAmountFunded[funder] = 0;\\n    }\\n    funders = new address[](0);\\n    // // transfer\\n    // payable(msg.sender).transfer(address(this).balance);\\n    // // send\\n    // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n    // require(sendSuccess, \\\"Send failed\\\");\\n    // call\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  // Explainer from: https://solidity-by-example.org/fallback/\\n  // Ether is sent to contract\\n  //      is msg.data empty?\\n  //          /   \\\\\\n  //         yes  no\\n  //         /     \\\\\\n  //    receive()?  fallback()\\n  //     /   \\\\\\n  //   yes   no\\n  //  /        \\\\\\n  //receive()  fallback()\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n}\\n\",\"keccak256\":\"0x2f8a85e7e1d845460533a299c3bd65b5fdc3e3536a2fe3acb2dde6920aee577c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n  // We could make this public, but then we'd have to deploy it\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n  }\\n\\n  // 1000000000\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xcc9a0b063f6ccda4112c0a1df5b103ea1170579b217a89c4daa622eaf069247e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162001020380380620010208339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610ec4806200015c6000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff5780638da5cb5b1461012a578063b60d428814610155578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b610095610324565b005b3480156100a357600080fd5b506100be60048036038101906100b991906107fc565b610566565b6040516100cb9190610842565b60405180910390f35b3480156100e057600080fd5b506100e961057e565b6040516100f69190610842565b60405180910390f35b34801561010b57600080fd5b5061011461058b565b60405161012191906108bc565b60405180910390f35b34801561013657600080fd5b5061013f6105b1565b60405161014c91906108e6565b60405180910390f35b61015d61019c565b005b34801561016b57600080fd5b506101866004803603810190610181919061092d565b6105d7565b60405161019391906108e6565b60405180910390f35b6802b5e3af16b18800006101db600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061690919063ffffffff16565b101561021c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610213906109b7565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026a9190610a06565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5243460405161031a9190610842565b60405180910390a2565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ab576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610456576000600182815481106103d1576103d0610a5c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044e90610a8b565b9150506103ae565b50600067ffffffffffffffff81111561047257610471610ad4565b5b6040519080825280602002602001820160405280156104a05781602001602082028036833780820191505090505b50600190805190602001906104b69291906106f2565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104dd90610b34565b60006040518083038185875af1925050503d806000811461051a576040519150601f19603f3d011682016040523d82523d6000602084013e61051f565b606091505b5050905080610563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055a90610b95565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105e757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061062283610652565b90506000670de0b6b3a7640000858361063b9190610bb5565b6106459190610c3e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069b57600080fd5b505afa1580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d39190610cfc565b5050509150506402540be400816106ea9190610d77565b915050919050565b82805482825590600052602060002090810192821561076b579160200282015b8281111561076a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610712565b5b509050610778919061077c565b5090565b5b8082111561079557600081600090555060010161077d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107c98261079e565b9050919050565b6107d9816107be565b81146107e457600080fd5b50565b6000813590506107f6816107d0565b92915050565b60006020828403121561081257610811610799565b5b6000610820848285016107e7565b91505092915050565b6000819050919050565b61083c81610829565b82525050565b60006020820190506108576000830184610833565b92915050565b6000819050919050565b600061088261087d6108788461079e565b61085d565b61079e565b9050919050565b600061089482610867565b9050919050565b60006108a682610889565b9050919050565b6108b68161089b565b82525050565b60006020820190506108d160008301846108ad565b92915050565b6108e0816107be565b82525050565b60006020820190506108fb60008301846108d7565b92915050565b61090a81610829565b811461091557600080fd5b50565b60008135905061092781610901565b92915050565b60006020828403121561094357610942610799565b5b600061095184828501610918565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109a1601b8361095a565b91506109ac8261096b565b602082019050919050565b600060208201905081810360008301526109d081610994565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a1182610829565b9150610a1c83610829565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a5157610a506109d7565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a9682610829565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ac957610ac86109d7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b1e600083610b03565b9150610b2982610b0e565b600082019050919050565b6000610b3f82610b11565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b7f600b8361095a565b9150610b8a82610b49565b602082019050919050565b60006020820190508181036000830152610bae81610b72565b9050919050565b6000610bc082610829565b9150610bcb83610829565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0457610c036109d7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4982610829565b9150610c5483610829565b925082610c6457610c63610c0f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8e81610c6f565b8114610c9957600080fd5b50565b600081519050610cab81610c85565b92915050565b6000819050919050565b610cc481610cb1565b8114610ccf57600080fd5b50565b600081519050610ce181610cbb565b92915050565b600081519050610cf681610901565b92915050565b600080600080600060a08688031215610d1857610d17610799565b5b6000610d2688828901610c9c565b9550506020610d3788828901610cd2565b9450506040610d4888828901610ce7565b9350506060610d5988828901610ce7565b9250506080610d6a88828901610c9c565b9150509295509295909350565b6000610d8282610cb1565b9150610d8d83610cb1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dcc57610dcb6109d7565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0957610e086109d7565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4657610e456109d7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8357610e826109d7565b5b82820290509291505056fea2646970667358221220c02befbafedb51ce85e72e617272da74cc235f2042109199fe9e9f665d80f5d464736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100ff5780638da5cb5b1461012a578063b60d428814610155578063dc0d3dff1461015f57610083565b80633ccfd60b1461008d5780633e47d6f3146100975780636b69a592146100d457610083565b366100835761008161019c565b005b61008b61019c565b005b610095610324565b005b3480156100a357600080fd5b506100be60048036038101906100b991906107fc565b610566565b6040516100cb9190610842565b60405180910390f35b3480156100e057600080fd5b506100e961057e565b6040516100f69190610842565b60405180910390f35b34801561010b57600080fd5b5061011461058b565b60405161012191906108bc565b60405180910390f35b34801561013657600080fd5b5061013f6105b1565b60405161014c91906108e6565b60405180910390f35b61015d61019c565b005b34801561016b57600080fd5b506101866004803603810190610181919061092d565b6105d7565b60405161019391906108e6565b60405180910390f35b6802b5e3af16b18800006101db600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061690919063ffffffff16565b101561021c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610213906109b7565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026a9190610a06565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a5243460405161031a9190610842565b60405180910390a2565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ab576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610456576000600182815481106103d1576103d0610a5c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044e90610a8b565b9150506103ae565b50600067ffffffffffffffff81111561047257610471610ad4565b5b6040519080825280602002602001820160405280156104a05781602001602082028036833780820191505090505b50600190805190602001906104b69291906106f2565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104dd90610b34565b60006040518083038185875af1925050503d806000811461051a576040519150601f19603f3d011682016040523d82523d6000602084013e61051f565b606091505b5050905080610563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055a90610b95565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106105e757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061062283610652565b90506000670de0b6b3a7640000858361063b9190610bb5565b6106459190610c3e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069b57600080fd5b505afa1580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d39190610cfc565b5050509150506402540be400816106ea9190610d77565b915050919050565b82805482825590600052602060002090810192821561076b579160200282015b8281111561076a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610712565b5b509050610778919061077c565b5090565b5b8082111561079557600081600090555060010161077d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107c98261079e565b9050919050565b6107d9816107be565b81146107e457600080fd5b50565b6000813590506107f6816107d0565b92915050565b60006020828403121561081257610811610799565b5b6000610820848285016107e7565b91505092915050565b6000819050919050565b61083c81610829565b82525050565b60006020820190506108576000830184610833565b92915050565b6000819050919050565b600061088261087d6108788461079e565b61085d565b61079e565b9050919050565b600061089482610867565b9050919050565b60006108a682610889565b9050919050565b6108b68161089b565b82525050565b60006020820190506108d160008301846108ad565b92915050565b6108e0816107be565b82525050565b60006020820190506108fb60008301846108d7565b92915050565b61090a81610829565b811461091557600080fd5b50565b60008135905061092781610901565b92915050565b60006020828403121561094357610942610799565b5b600061095184828501610918565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109a1601b8361095a565b91506109ac8261096b565b602082019050919050565b600060208201905081810360008301526109d081610994565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a1182610829565b9150610a1c83610829565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a5157610a506109d7565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a9682610829565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ac957610ac86109d7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b1e600083610b03565b9150610b2982610b0e565b600082019050919050565b6000610b3f82610b11565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b7f600b8361095a565b9150610b8a82610b49565b602082019050919050565b60006020820190508181036000830152610bae81610b72565b9050919050565b6000610bc082610829565b9150610bcb83610829565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0457610c036109d7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4982610829565b9150610c5483610829565b925082610c6457610c63610c0f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8e81610c6f565b8114610c9957600080fd5b50565b600081519050610cab81610c85565b92915050565b6000819050919050565b610cc481610cb1565b8114610ccf57600080fd5b50565b600081519050610ce181610cbb565b92915050565b600081519050610cf681610901565b92915050565b600080600080600060a08688031215610d1857610d17610799565b5b6000610d2688828901610c9c565b9550506020610d3788828901610cd2565b9450506040610d4888828901610ce7565b9350506060610d5988828901610ce7565b9250506080610d6a88828901610c9c565b9150509295509295909350565b6000610d8282610cb1565b9150610d8d83610cb1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dcc57610dcb6109d7565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0957610e086109d7565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4657610e456109d7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e8357610e826109d7565b5b82820290509291505056fea2646970667358221220c02befbafedb51ce85e72e617272da74cc235f2042109199fe9e9f665d80f5d464736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 79,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}